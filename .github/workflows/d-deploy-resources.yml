on:
  workflow_dispatch:
    inputs:
      location:
        description: "Hub Location (weu / frc)"
        type: choice
        required: true
        options:
          - 'weu'
          - 'frc'
      tenant:
        description: "GitHub tenant to deploy to (ae / prod)"
        type: choice
        required: true
        options:
         - 'ae'
         - 'prod'
      resource:
        description: "Which resources to deploy"
        type: choice
        required: true
        options:
         - 'action-group'
         - 'bastion'
         - 'event-action-group'
         - 'firewall'
         - 'keyvault'
         - 'private-dns'
         - 'random_id'
         - 'rg'
         - 'vnet'
         - 'vnet-peering'
      terraform-action:
        description: 'Terraform action'
        type: choice
        required: true
        options:
          - 'plan'
          - 'plan+apply'
          - 'destroy'
          - 'import'
      confirm-destroy:
        description: "Confirm destroy"
        type: boolean
        default: false
      terraform-import-file:
        description: "(Import only!) <import-file-name>.ps1"
        type: string
        default: ''
      IsNewDeployment:
        description: "IsNewDeployment?"
        type: boolean
        default: false
        required: true

run-name: Deploy ${{ github.event.inputs.resource }} | ${{ github.event.inputs.terraform-action }} | ${{ github.event.inputs.tenant }} | ${{ github.event.inputs.location }} | ${{ github.ref_name }}
name: Deploy Resources

jobs:
  Deploy-resources:
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      location: ${{ github.event.inputs.location }}
      tenant: ${{ github.event.inputs.tenant }}
      confirm-destroy: ${{ github.event.inputs.confirm-destroy }}
      IsNewDeployment: ${{ github.event.inputs.IsNewDeployment }}
      terraform-action: ${{ github.event.inputs.terraform-action }}
      terraform-directory: ${{ github.event.inputs.resource }}
      terraform-init-args: '-backend-config="key=${{ github.event.inputs.resource }}-${{ github.event.inputs.tenant }}-${{ github.event.inputs.location }}.tfstate"'
      terraform-plan-args: ''
      terraform-apply-args: ''
      terraform-import-file: ${{ inputs.terraform-import-file }}
    secrets: inherit
